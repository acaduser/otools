(defun c:chBylayerTColor (/ *error* main doc ename name index)
	(vl-load-com)
	(defun main()
		(princ "\nchBylayerTColor")
		(vla-StartUndoMark (setq doc (vla-get-ActiveDocument (vlax-get-acad-object))))
		(if (and
				(setq ss (ssget))
				(setq res (acad_truecolordlg 7 nil)))
			(progn
				(print res)
				(setq enames (ss->enames ss))
				(setq layerList
					(vl-sort (mapcar '(lambda(x) (cdr(assoc 8 (entget x)))) enames) '<)
				)
				(acet-layerp-mark t)
				(vlax-for oLayer (vla-get-Layers doc)
					;;(setq name (vla-get-name oLayer));;unicode NG
					(setq name (cdr (assoc 2 (entget (vlax-vla-object->ename oLayer)))))
					(if (member name layerList)
						(progn
							(setq tc (vla-get-TrueColor oLayer))
							(cond
								((setq color (cdr (assoc 430 res)))
									(setq lst (split color "$"))
									(print lst)
									(vla-SetColorBookColor tc (car lst) (cadr lst))
									(vla-put-EntityColor tc (cdr (assoc 420 res)))
									(vla-put-TrueColor oLayer tc)
								)
								((setq color (cdr (assoc 420 res)))
									(vla-SetColorBookColor tc "" "")
									(vla-put-EntityColor tc (cdr (assoc 420 res)))
									(vla-put-TrueColor oLayer tc)
								)
								((setq color (cdr (assoc 62 res)))
									(vla-SetColorBookColor tc "" "")
									(vla-put-ColorIndex tc (cdr (assoc 62 res)))
									(vla-put-TrueColor oLayer tc)
								)
							)
						)
					)
				)
				(acet-layerp-mark nil)				
			)
		)
		(vla-EndUndoMark doc)
		(princ)
	)
	(defun split(str ptn / pos)
		(if (setq pos (vl-string-search ptn str))
			(append (list (substr str 1	pos)) (split (substr str (+ (1+ pos) (strlen ptn))) ptn))
			(list str)
		)
	)
	(defun ss->enames (ss / tmp i)
		(setq i 0)
		(repeat (sslength ss) (setq tmp (cons (ssname ss i) tmp) i (1+ i)))
		(reverse tmp)
	)
	(defun *error*(s)
		(princ s)
		(vla-EndUndoMark doc)
		(princ)
	)
	(apply 'main nil)
)
